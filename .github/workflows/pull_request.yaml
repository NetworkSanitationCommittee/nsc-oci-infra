name: Validate pull request
on:
  pull_request:
    branches:
      - main
jobs:
  plan:
    strategy:
      matrix:
        environment:
          - nsccluster
    name: Plan ${{ matrix.environment }}
    runs-on: ubuntu-latest
    env:
      OCI_ME: "nonprod@phonejanitor.com"
      AWS_ACCESS_KEY_ID: ${{ secrets.OCI_TERRFORM_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.OCI_TERRAFORM_SECRET_ACCESS_KEY }}
    steps:
      - name: Setup OCI CLI
        id: ocisetup
        uses: oracle-actions/run-oci-cli-command@v1.1
        with:
          command: 'setup oci-cli-rc'
      - name: Splat PEM
        shell: bash
        id: splatpem
        run: |
          echo "${{ secrets.OCI_PJNP_PEM }}" >> ~/.oci/auto.pem
          echo "${{ secrets.OCI_CLI_CONFIG }}" >> ~/.oci/config
          echo "${{ secrets.OCI_CLI_RC_TAIL }}" > ~/.oci/oci_cli_rc
          chmod 600 ~/.oci/*
          echo "PEM_PATH=~/.oci/auto.pem" >> ${GITHUB_OUTPUT}
      - name: Plan
        uses: catalystsquad/action-terraform@v1
        with:
          command: plan
          work-dir: ${{ matrix.environment }}
        env:
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_PJ_TENANCY_OCID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_PJ_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_PJNP_FINGERPRINT }}
          TF_VAR_private_key_path: ${{ steps.splatpem.outputs.PEM_PATH }}
          TF_VAR_region: ${{ secrets.OCI_PJNP_REGION }}
      - name: Cleanup PEM
        if: always()
        shell: bash
        run: |
          rm -f ${{ steps.splatpem.outputs.PEM_PATH }}
          rm -rf ${{ ~/.oci/ }}
